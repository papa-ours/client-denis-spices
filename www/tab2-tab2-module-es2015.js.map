{"version":3,"sources":["./src/app/tab2/tab2.page.html","./src/app/tab2/tab2.module.ts","./src/app/tab2/tab2.page.scss","./src/app/tab2/tab2.page.ts"],"names":[],"mappings":"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","file":"tab2-tab2-module-es2015.js","sourcesContent":["module.exports = \"<ion-content>\\n  <ion-grid fixed>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\"></ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <form (ngSubmit)=\\\"onSubmit()\\\">  \\n\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Nom</ion-label>\\n              <ion-input name=\\\"label\\\" [value]=\\\"spice.label\\\" type=\\\"text\\\" placeholder=\\\"Entrer le nom de l'épice\\\" (ionChange)=\\\"updateLabel($event)\\\"></ion-input>\\n            </ion-item>\\n        \\n            <ion-list>\\n              <ion-list-header>\\n                <ion-label>Type</ion-label>\\n              </ion-list-header>\\n              <ion-radio-group name=\\\"type\\\" [value]=\\\"spice.type\\\" (ionChange)=\\\"updateType($event)\\\">\\n                <ion-item *ngFor=\\\"let type of spiceTypes; let ind=index\\\">\\n                  <ion-label>{{type.label}}</ion-label>\\n                  <ion-radio slot=\\\"start\\\" [value]=\\\"ind\\\"></ion-radio>\\n                </ion-item>\\n              </ion-radio-group>\\n            </ion-list>\\n          </ion-list>\\n          <ion-grid fixed>\\n            <ion-row>\\n              <ion-col size=\\\"3\\\">\\n                <ion-button color=\\\"primary\\\" type=\\\"submit\\\">\\n                  Continuer\\n                </ion-button>\\n              </ion-col>\\n              <ion-col size=\\\"3\\\">\\n                <ion-button color=\\\"primary\\\" (click)=\\\"onSubmit(true)\\\">\\n                  Soumettre\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </form>\\n      </ion-col>\\n      <ion-col size=\\\"3\\\"></ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\"","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjIvdGFiMi5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { Spice } from '../spice';\nimport { SPICE_TYPES } from '../spice-types';\nimport { SpiceType } from '../spice-type';\nimport { ToastController } from '@ionic/angular';\nimport { SpiceService } from '../spice.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page {\n\n  public spice: any;\n  public spiceTypes: SpiceType[] = SPICE_TYPES;\n\n  constructor(private toastController: ToastController, private service: SpiceService, private router: Router) {\n    this.spice = {\n      label: \"\",\n      type: 0,\n    }\n  }\n\n  private async showToast(): Promise<void> {\n    const toast: HTMLIonToastElement = await this.toastController.create({\n      message: 'Le nom ne doit pas être vide',\n      duration: 2200,\n      position: 'bottom',\n      color: 'danger',\n      showCloseButton: true,\n      closeButtonText: 'OK',\n    });\n\n    toast.present();\n  }\n\n  public onSubmit(changeView: boolean = false) {\n    if (this.spice.label === \"\") {\n      this.showToast();\n      return;\n    }\n\n    this.service.createSpice(this.spice).subscribe(async () => {\n      this.service.getAllSpices();\n      this.spice = {\n        label: \"\",\n        type: 0,\n      }\n      if (changeView) {\n        this.router.navigateByUrl(\"/tabs/all\");\n      } else {\n        const toast: HTMLIonToastElement = await this.toastController.create({\n          message: 'Épice ajoutée',\n          duration: 2200,\n          position: 'bottom',\n          color: 'success',\n          showCloseButton: true,\n          closeButtonText: 'OK',\n        });\n    \n        toast.present();\n      }\n    });\n  }\n\n  public updateLabel($event: CustomEvent) {\n    this.spice.label = $event.detail.value;\n  }\n\n  public updateType($event: CustomEvent) {\n    this.spice.type = $event.detail.value;\n  }\n}\n"],"sourceRoot":""}